#ifndef IOP_CONFIGURATION_H
#define IOP_CONFIGURATION_H

#include "certificate_storage.hpp"

#include "log.hpp"
#include "option.hpp"
#include "static_string.hpp"
#include <cstdint>

/// Minimum log level to print a message (if serial is enabled)
const auto logLevel = LogLevel::INFO;

const uint8_t soilTemperaturePin = D5;
const uint8_t airTempAndHumidityPin = D6;
const uint8_t soilResistivityPowerPin = D7;
const uint8_t factoryResetButton = D1;

/// Version of DHT (Digital Humidity and Temperature) sensor. (ex: DHT11 or
/// DHT21 or DHT22...)
const uint8_t dhtVersion = 22; // DHT22

/// Time between measurements
const esp_time interval = 180 * 1000;

/// Expands to:
/// static const char * const uri_storage_progmem_char = <url>;
/// static const StaticString uri_storage(uri_storage_progmem_char);
/// static const Option<StaticString> uri(uri_storage)
///
/// It should be prefixed with https in production
/// But if using plain http, define IOP_NOSSL below, otherwise it won't work
MAYBE_PROGMEM_STRING(uri, "https://iop-monitor-server.tk:4001");

// This should be commented out in production, but it's here to allow debugging
// in a local network using http
// #define IOP_NOSSL

/// You don't need to fill the fields below, they may actually be
/// counter-productive Replace the MAYBE_PROGMEM_STRING_EMPTY(name) with
/// MAYBE_PROGMEM_STRING(name, value)

MAYBE_PROGMEM_STRING_EMPTY(wifiNetworkName);
MAYBE_PROGMEM_STRING_EMPTY(wifiPassword);

MAYBE_PROGMEM_STRING_EMPTY(iopEmail);
MAYBE_PROGMEM_STRING_EMPTY(iopPassword);

#endif