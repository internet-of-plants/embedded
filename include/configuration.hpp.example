#ifndef IOP_CONFIGURATION_HPP
#define IOP_CONFIGURATION_HPP

#include "core/log.hpp"
#include "core/pins.hpp"
#include "utils.hpp"
#include <optional>

/// Minimum log level to print a message (if serial is enabled)
const auto logLevel = iop::LogLevel::INFO;

const uint8_t soilTemperaturePin = D5;
const uint8_t airTempAndHumidityPin = D6;
const uint8_t soilResistivityPowerPin = D7;
const uint8_t factoryResetButton = D1;

/// Version of DHT (Digital Humidity and Temperature) sensor. (ex: DHT11 or
/// DHT21 or DHT22...)
const uint8_t dhtVersion = 22; // DHT22

/// Time between measurements
const iop::esp_time interval = 180 * 1000;

/// The fields bellow should be empty. Filling them will be counter productive
/// It's only here to speedup some debugging
///
/// If you really want to, do like above

static auto wifiNetworkName() -> std::optional<iop::StaticString> {
    return std::optional<iop::StaticString>();
}
static auto wifiPassword() -> std::optional<iop::StaticString> {
    return std::optional<iop::StaticString>();
}

static auto iopEmail() -> std::optional<iop::StaticString> {
    return std::optional<iop::StaticString>();
}
static auto iopPassword() -> std::optional<iop::StaticString> {
    return std::optional<iop::StaticString>();
}

/// It should be prefixed with https in production. Do not use plain http in
/// production!
///
/// But if using plain http: Undefine IOP_SSL at `core/utils.hpp`,
/// otherwise it won't work
static auto uri() -> iop::StaticString {
    #ifdef IOP_DESKTOP
    return iop::StaticString(F("http://127.0.0.1:4001"));
    #else
    return iop::StaticString(F("https://iop-monitor-server.tk:4001"));
    #endif
}

#endif